{
  "version": 3,
  "file": "chevtek-angular-spinners.umd.min.js",
  "sources": [
    "ng://@chevtek/angular-spinners/out/src/spinner.service.ts",
    "ng://@chevtek/angular-spinners/out/src/spinner.component.ts",
    "ng://@chevtek/angular-spinners/out/src/spinner.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { SpinnerComponent } from './spinner.component';\n\n\n@Injectable()\nexport class SpinnerService {\n  private spinnerCache = new Set<SpinnerComponent>();\n\n  _register(spinner: SpinnerComponent): void {\n    this.spinnerCache.add(spinner);\n  }\n\n  _unregister(spinnerToRemove: SpinnerComponent): void {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner === spinnerToRemove) {\n        this.spinnerCache.delete(spinner);\n      }\n    });\n  }\n\n  _unregisterGroup(spinnerGroup: string): void {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.group === spinnerGroup) {\n        this.spinnerCache.delete(spinner);\n      }\n    });\n  }\n\n  _unregisterAll(): void {\n    this.spinnerCache.clear();\n  }\n\n  show(spinnerName: string): void {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.name === spinnerName) {\n        spinner.show = true;\n      }\n    });\n  }\n\n  hide(spinnerName: string): void {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.name === spinnerName) {\n        spinner.show = false;\n      }\n    });\n  }\n\n  showGroup(spinnerGroup: string): void {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.group === spinnerGroup) {\n        spinner.show = true;\n      }\n    });\n  }\n\n  hideGroup(spinnerGroup: string): void {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.group === spinnerGroup) {\n        spinner.show = false;\n      }\n    });\n  }\n\n  showAll(): void {\n    this.spinnerCache.forEach(spinner => spinner.show = true);\n  }\n\n  hideAll(): void {\n    this.spinnerCache.forEach(spinner => spinner.show = false);\n  }\n\n  isShowing(spinnerName: string): boolean | undefined {\n    let showing = undefined;\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.name === spinnerName) {\n        showing = spinner.show;\n      }\n    });\n    return showing;\n  }\n}",
    "import { Component, Input, Output, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { SpinnerService } from './spinner.service';\n\n@Component({\n  selector: 'spinner',\n  template: `\n    <div *ngIf=\"show\">\n      <img *ngIf=\"loadingImage\" [src]=\"loadingImage\" />\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SpinnerComponent implements OnInit, OnDestroy {\n  constructor(private spinnerService: SpinnerService) {}\n\n  @Input() name: string;\n  @Input() group: string;\n  @Input() loadingImage: string;\n\n  private isShowing = false;\n\n  @Input()\n  get show(): boolean {\n    return this.isShowing;\n  }\n\n  @Output() showChange = new EventEmitter();\n\n  set show(val: boolean) {\n    this.isShowing = val;\n    this.showChange.emit(this.isShowing);\n  }\n\n  ngOnInit(): void {\n    if (!this.name) throw new Error(\"Spinner must have a 'name' attribute.\");\n\n    this.spinnerService._register(this);\n  }\n\n  ngOnDestroy(): void {\n    this.spinnerService._unregister(this);\n  }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpinnerComponent } from './spinner.component';\nimport { SpinnerService } from './spinner.service';\n\n@NgModule({\n  declarations: [SpinnerComponent],\n  imports: [CommonModule],\n  exports: [SpinnerComponent],\n  providers: [SpinnerService]\n})\nexport class SpinnerModule { }"
  ],
  "names": [
    "SpinnerService",
    "this",
    "spinnerCache",
    "Set",
    "prototype",
    "_register",
    "spinner",
    "add",
    "_unregister",
    "spinnerToRemove",
    "_this",
    "forEach",
    "delete",
    "_unregisterGroup",
    "spinnerGroup",
    "group",
    "_unregisterAll",
    "clear",
    "show",
    "spinnerName",
    "name",
    "hide",
    "showGroup",
    "hideGroup",
    "showAll",
    "hideAll",
    "isShowing",
    "showing",
    "undefined",
    "type",
    "Injectable",
    "SpinnerComponent",
    "spinnerService",
    "showChange",
    "EventEmitter",
    "Object",
    "defineProperty",
    "get",
    "set",
    "val",
    "emit",
    "ngOnInit",
    "Error",
    "ngOnDestroy",
    "Component",
    "args",
    "selector",
    "template",
    "Input",
    "loadingImage",
    "Output",
    "SpinnerModule",
    "NgModule",
    "declarations",
    "imports",
    "CommonModule",
    "exports",
    "providers"
  ],
  "mappings": "oXAAA,IAAAA,EAAA,wBAMAC,KAAAC,aAAyB,IAAIC,WAE3BH,EAAFI,UAAAC,UAAE,SAAUC,GACRL,KAAKC,aAAaK,IAAID,IAGxBN,EAAFI,UAAAI,YAAE,SAAYC,GAAZ,IAAFC,EAAAT,KACIA,KAAKC,aAAaS,QAAQ,SAAAL,GACpBA,IAAYG,GACdC,EAAKR,aAAaU,UAAON,MAK/BN,EAAFI,UAAAS,iBAAE,SAAiBC,GAAjB,IAAFJ,EAAAT,KACIA,KAAKC,aAAaS,QAAQ,SAAAL,GACpBA,EAAQS,QAAUD,GACpBJ,EAAKR,aAAaU,UAAON,MAK/BN,EAAFI,UAAAY,eAAE,WACEf,KAAKC,aAAae,SAGpBjB,EAAFI,UAAAc,KAAE,SAAKC,GACHlB,KAAKC,aAAaS,QAAQ,SAAAL,GACpBA,EAAQc,OAASD,IACnBb,EAAQY,MAAO,MAKrBlB,EAAFI,UAAAiB,KAAE,SAAKF,GACHlB,KAAKC,aAAaS,QAAQ,SAAAL,GACpBA,EAAQc,OAASD,IACnBb,EAAQY,MAAO,MAKrBlB,EAAFI,UAAAkB,UAAE,SAAUR,GACRb,KAAKC,aAAaS,QAAQ,SAAAL,GACpBA,EAAQS,QAAUD,IACpBR,EAAQY,MAAO,MAKrBlB,EAAFI,UAAAmB,UAAE,SAAUT,GACRb,KAAKC,aAAaS,QAAQ,SAAAL,GACpBA,EAAQS,QAAUD,IACpBR,EAAQY,MAAO,MAKrBlB,EAAFI,UAAAoB,QAAE,WACEvB,KAAKC,aAAaS,QAAQ,SAAAL,GAAW,OAAAA,EAAQY,MAAO,KAGtDlB,EAAFI,UAAAqB,QAAE,WACExB,KAAKC,aAAaS,QAAQ,SAAAL,GAAW,OAAAA,EAAQY,MAAO,KAGtDlB,EAAFI,UAAAsB,UAAE,SAAUP,GACR,IAAIQ,EAAUC,UAMd,OALA3B,KAAKC,aAAaS,QAAQ,SAAAL,GACpBA,EAAQc,OAASD,IACnBQ,EAAUrB,EAAQY,QAGfS,KA/EX,iBAIA,CAAAE,KAACC,EAAAA,aCJD,IAAAC,EAAA,WAaE,SAAFA,EAAsBC,GAAA/B,KAAtB+B,eAAsBA,EAMtB/B,KAAAyB,WAAsB,EAOtBzB,KAAAgC,WAAyB,IAAIC,EAAAA,oBAJ7BC,OAAAC,eAAML,EAAN3B,UAAA,OAAA,CAAAiC,IAAA,WACI,OAAOpC,KAAKyB,WAKhBY,IAAE,SAASC,GACPtC,KAAKyB,UAAYa,EACjBtC,KAAKgC,WAAWO,KAAKvC,KAAKyB,4CAG5BK,EAAF3B,UAAAqC,SAAE,WACE,IAAKxC,KAAKmB,KAAM,MAAM,IAAIsB,MAAM,yCAEhCzC,KAAK+B,eAAe3B,UAAUJ,OAGhC8B,EAAF3B,UAAAuC,YAAE,WACE1C,KAAK+B,eAAexB,YAAYP,SAxCpC,iBAGA,CAAA4B,KAACe,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,UACVC,SAAU,4KAJZ,CAAAlB,KAAS7B,uBAcToB,KAAA,CAAA,CAAAS,KAAGmB,EAAAA,QACHjC,MAAA,CAAA,CAAAc,KAAGmB,EAAAA,QACHC,aAAA,CAAA,CAAApB,KAAGmB,EAAAA,QAIH9B,KAAA,CAAA,CAAAW,KAAGmB,EAAAA,QAKHf,WAAA,CAAA,CAAAJ,KAAGqB,EAAAA,UC1BH,IAAAC,EAAA,2BAKA,CAAAtB,KAACuB,EAAAA,SAADP,KAAA,CAAU,CACRQ,aAAc,CAACtB,GACfuB,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACzB,GACV0B,UAAW,CAACzD"
}
